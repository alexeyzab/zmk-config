/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define FIRST   1
#define SECOND  2
#define THIRD   3

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
   time-to-max-speed-ms = <680>;
   acceleration-exponent=<2>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                   default_layer {};

   //              default_layer {
   //                      bindings = <
   // &kp Q &kp W &kp E &kp R &kp T        &kp Y &kp U  &kp I     &kp O   &kp P
   // &kp A &kp S &kp D &kp F &kp G        &kp H &kp J  &kp K     &kp L   &kp SEMI
   // &kp Z &kp X &kp C &kp V &kp B        &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
   // &kp LGUI &sk LSHIFT &mt LCTLR BSPC   &mt LALT SPACE &sl 1 &kp RGUI
   //                      >;
   //              };
                first_layer {
                        bindings = <
   &kp ESC  &kp EXCL &kp AT &kp DLLR &kp PRCNT    &trans &kp N7 &kp N8 &kp N9 &kp BSPC
   &kp TAB  &kp LPAR &kp RPAR &kp MINUS &kp SQT   &kp AMPS &kp N4 &kp N5 &kp N6 &kp RET
   &kp LBKT &kp RBKT &kp HASH &kp LBRC &kp RBRC   &kp N0 &kp N1 &kp N2 &kp N3 &kp EQUAL
   &kp LGUI &sk LSHIFT &kp GRAVE                  &kp BSLH &to 0 &to 2
                        >;
                };

                second_layer {
                        bindings = <
   &kp ESC &kp C_PP &kp C_PREV &kp C_NEXT &trans          &trans &trans &trans &trans &kp BSPC
   &kp TAB &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans    &trans &trans &trans &trans &kp RET
   &trans &trans &kp C_BRI_DN &kp C_BRI_UP &trans         &trans &trans &trans &trans &trans
   &kp LGUI &sk LSHIFT &mt LCTRL BSPC                     &mt LALT SPACE &trans &to 3
                        >;
                };

                third_layer {};

   //              third_layer {
   //                      bindings = <
   // &kp ESC &mwh SCROLL_LEFT &mmv MOVE_UP &mwh SCROLL_RIGHT &trans      &trans &trans &trans &trans &kp BSPC
   // &kp TAB &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans        &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp RET
   // &trans &mkp RCLK &mwh SCROLL_UP &mwh SCROLL_DOWN &trans             &mkp LCLK &trans &trans &trans &trans
   // &kp LGUI &sk LSHIFT &mt LCTRL BSPC                                  &mt LAT &to 2 &to 0
   //                      >;
   //              };
        };
};
